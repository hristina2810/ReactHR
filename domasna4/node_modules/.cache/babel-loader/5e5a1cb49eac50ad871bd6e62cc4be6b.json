{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hristina\\\\Desktop\\\\New folder\\\\domasna4\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Input } from './Input';\nimport Dropdown from '.Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [fieldType, setFieldType] = useState(\"text\");\n  const [elements, setElements] = useState([{\n    value: \"Facebook\",\n    name: \"Facebook\"\n  }, {\n    value: \"Instagram\",\n    name: \"Instagram\"\n  }, {\n    value: \"SnapChat\",\n    name: \"SnapChat\"\n  }]);\n  const [selectedOption, setSelectedOption] = useState(\"Facebook\");\n  const [comment, setComment] = useState(\"\");\n  const [longComment, setlongComment] = useState(false);\n  useEffect(() => {\n    console.log(\"Username:\" + username + \"Password:\" + password + \"\\nSelected option: \" + selectedOption);\n  }, [username, password, selectedOption, comment]);\n\n  function changeFieldType() {\n    setFieldType(fieldType === \"password\" ? 'text' : 'password');\n  }\n\n  function changeInput() {\n    setlongComment();\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    alert(`Username: ${username}\\nPassword: ${password}\\nSelected option: ${selectedOption}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Enter Username\",\n        value: username,\n        onChange: event => {\n          setPassword(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: fieldType,\n        placeholder: \"Enter Password\",\n        value: password,\n        name: \"password\",\n        onChange: event => {\n          setPassword(event.target.value);\n        },\n        toggle: changeFieldType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: fieldType,\n        placeholder: \"Enter Text Message\",\n        value: comment,\n        name: \"comment\",\n        onChange: event => {\n          setComment(event.target.value);\n        },\n        toggle: changeFieldType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add your comment: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Enter Comment\",\n        value: comment,\n        name: \"comment\",\n        onChange: e => {\n          setComment(e.target.value);\n        },\n        renderTextArea: longComment,\n        changeInput: () => {\n          setlongComment(!longComment);\n        } //ja zima tekovnata i ja setira na sprotivnoto\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        elements: elements,\n        changeOption: e => setSelectedOption(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"rAdQnBi1wNAZIAjmrbZKSYOS1lA=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Hristina/Desktop/New folder/domasna4/src/components/Login.js"],"names":["React","useState","useEffect","Input","Dropdown","Login","username","setUsername","password","setPassword","fieldType","setFieldType","elements","setElements","value","name","selectedOption","setSelectedOption","comment","setComment","longComment","setlongComment","console","log","changeFieldType","changeInput","handleSubmit","event","preventDefault","alert","target","e"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Input} from './Input';\r\nimport  Dropdown  from '.Dropdown';\r\n\r\nexport function Login() {\r\n    const [username,setUsername] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [fieldType,setFieldType] = useState(\"text\");\r\n    const [elements,setElements] = useState(\r\n        [\r\n        {value:\"Facebook\", name:\"Facebook\"},\r\n        {value:\"Instagram\", name:\"Instagram\"},\r\n        {value:\"SnapChat\" , name:\"SnapChat\"}\r\n    ]\r\n    );\r\n    const[selectedOption, setSelectedOption] = useState(\"Facebook\")\r\n    const[comment, setComment] =  useState(\"\")\r\n    const[longComment, setlongComment] = useState(false)\r\n    \r\nuseEffect(() => {\r\n    console.log(\"Username:\" + username + \"Password:\" + password + \"\\nSelected option: \" +selectedOption)\r\n},[username,password,selectedOption,comment]) \r\n\r\nfunction changeFieldType() {\r\n    setFieldType(fieldType === \"password\" ? 'text' : 'password'\r\n    )\r\n}\r\n\r\nfunction changeInput(){\r\n    setlongComment(\r\n        \r\n    )\r\n}\r\nfunction handleSubmit(event){\r\n    event.preventDefault();\r\n    alert(`Username: ${username}\\nPassword: ${password}\\nSelected option: ${selectedOption}`)\r\n}\r\nreturn(\r\n    <div id=\"login\">\r\n        <form onSubmit={handleSubmit}>\r\n           <Input \r\n           type=\"text\"\r\n           placeholder=\"Enter Username\"\r\n           value={username}\r\n           onChange={(event)=>{setPassword(event.target.value)}}/>\r\n           <Input\r\n           type={fieldType}\r\n           placeholder=\"Enter Password\"\r\n           value={password}\r\n           name=\"password\"\r\n           onChange={(event)=>{setPassword(event.target.value)}}\r\n           toggle={changeFieldType}\r\n           />\r\n           <button className=\"action-button\">Sign In</button>\r\n           <input\r\n            type={fieldType}\r\n            placeholder=\"Enter Text Message\"\r\n            value={comment}\r\n            name=\"comment\"\r\n            onChange={(event)=>{setComment(event.target.value)}}\r\n            toggle={changeFieldType}\r\n            />\r\n          \r\n          <p>Add your comment: </p>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter Comment\"\r\n                value={comment}\r\n                name=\"comment\"\r\n                onChange={(e)=>{setComment(e.target.value)}}\r\n                renderTextArea={longComment}\r\n                changeInput={()=>{setlongComment(!longComment)}}\r\n                //ja zima tekovnata i ja setira na sprotivnoto\r\n              />\r\n              <Dropdown elements={elements} changeOption={(e)=>setSelectedOption(e.target.value)}/>\r\n\r\n              <button className=\"action-button\">Sign in</button>\r\n        </form>\r\n    </div>\r\n\r\n)\r\n\r\n}"]},"metadata":{},"sourceType":"module"}